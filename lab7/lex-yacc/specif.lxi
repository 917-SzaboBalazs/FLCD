%{
#include <math.h> 
%} 

%option noyywrap

DIGIT [0-9]
ID [a-z][a-z0-9]*

%% 

{DIGIT}+"."{DIGIT}*  printf( "A float: %s (%g)\n", yytext, atof( yytext ) );  

"if"|"readint"|"var"|"list"|"append"|"while"|"print"  printf( "A reserved word: %s\n", yytext );  

{ID} printf( "An identifier: %s\n", yytext );

{DIGIT}+ printf("An integer %s (%d)\n", yytext, atoi( yytext ) );

"+"|"-"|"*"|"/"|","|"="|"("|")"|"{"|"}"|";"|"<"|">"|"<="|">="|"=="|"!="|"."|"["|"]" printf( "An operator: %s\n", yytext ); 

"{"[^}\n]*"}" /* eat up one-line comments */ 

[ \t\n]+ /* eat up whitespace */ 
		 
. printf("Lexical Error: %s\n",yytext);
%% 
int main(int argc, char **argv ) 
{ 
    ++argv, --argc; /* skip over program name */ 
    if ( argc > 0 ) 
    yyin = fopen( argv[0], "r" ); 
    else 
     yyin = stdin; 
    yylex(); 
} 
